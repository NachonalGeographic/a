# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ILvd65N2skFFWUzWdmXUb5Cryuhmkp7b
"""

import random

clientes = []

def validar_rut(rut):
    """
    Función que valida si un RUT cumple con los requisitos de formato.
    """
    return len(rut) >= 8 and len(rut) <= 9 and rut.isalnum()

def validar_nombre(nombre):
    """
    Función que valida si el nombre no está vacío.
    """
    return len(nombre.strip()) > 0

def validar_proyecto(proyecto):
    """
    Función que valida si el proyecto ingresado es válido.
    """
    return proyecto in ['VS', 'VF', 'VN']

def validar_renta(renta):
    """
    Función que valida si la renta es un valor numérico válido.
    """
    try:
        renta = int(renta)
        return renta > 0
    except:
        return False

def registrar_cliente():
    """
    Función que registra los datos de un cliente en la lista de clientes.
    """
    rut = input("Ingrese el RUT del cliente (sin guión ni puntos): ")
    while not validar_rut(rut):
        rut = input("RUT inválido. Ingrese nuevamente: ")

    nombre = input("Ingrese el nombre del cliente: ")
    while not validar_nombre(nombre):
        nombre = input("Nombre inválido. Ingrese nuevamente: ")

    proyecto = input("Ingrese el proyecto al que está interesado (VS, VF o VN): ")
    while not validar_proyecto(proyecto):
        proyecto = input("Proyecto inválido. Ingrese nuevamente: ")

    renta = input("Ingrese la renta mensual del cliente: ")
    while not validar_renta(renta):
        renta = input("Renta inválida. Ingrese nuevamente: ")

    cliente = {'rut': rut, 'nombre': nombre, 'proyecto': proyecto, 'renta': int(renta)}
    clientes.append(cliente)
    print("Cliente registrado exitosamente.")

def buscar_cliente():
    """
    Función que busca un cliente por su RUT y muestra sus datos.
    """
    rut = input("Ingrese el RUT del cliente que desea buscar: ")
    encontrado = False
    for cliente in clientes:
        if cliente['rut'] == rut:
            print("Datos del cliente:")
            print(f"RUT: {cliente['rut']}")
            print(f"Nombre: {cliente['nombre']}")
            print(f"Proyecto: {cliente['proyecto']}")
            print(f"Renta mensual: {cliente['renta']}")
            encontrado = True
            break
    if not encontrado:
        print("Cliente no encontrado.")

def generar_reportes():
    """
    Función que genera reportes de los clientes que tienen una renta superior a $900.000
    """
    cantidad_reportes = 0
    for cliente in clientes:
        if cliente['renta'] > 900000:
            uf = random.randint(2500, 3700)
            print("Reporte IMMO Ltda.:")
            print(f"Sr/a {cliente['nombre']}")
            print(f"RUT: {cliente['rut']}")
            print(f"Con su renta de {cliente['renta']}")
            print(f"En el Proyecto: {cliente['proyecto']}")
            print(f"Puede acceder a un Dpto de UF {uf}")
            cantidad_reportes += 1
    print(f"Se generaron {cantidad_reportes} reportes.")

def menu():
    """
    Función que muestra el menú principal y llama a las funciones correspondientes según la opción elegida.
    """
    opcion = ""
    while opcion != "4":
        print("\n=== Inmobiliaria IMMO Ltda. ===")
        print("1. Grabar/Registrar")
        print("2. Buscar por RUT")
        print("3. Reporte según renta")
        print("4. Salir")
        opcion = input("Ingrese una opción (1-4): ")

        if opcion == "1":
            registrar_cliente()
        elif opcion == "2":
            buscar_cliente()
        elif opcion == "3":
            generar_reportes()
        elif opcion == "4":
            print("Saliendo del programa...")
        else:
            print("Opción inválida.")

# Llamada al menú principal
menu()